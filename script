-- Active: 1742297523462@@127.0.0.1@5432@20251_fatec_pbdi_helena

-- teste
DELETE FROM tb_pessoa WHERE cod_pessoa = 1;
SELECT * FROM tb_pessoa WHERE cod_pessoa = 1;

-- trigger que chama a função antes de cada DELETE em tb_pessoa
CREATE TRIGGER tg_bloquear_delete_pessoa
BEFORE DELETE ON tb_pessoa
FOR EACH ROW
EXECUTE PROCEDURE fn_bloquear_delete_pessoa();

--1.2 Associe um trigger de DELETE à tabela. Quando um DELETE for executado, o trigger deve atribuir FALSE à coluna ativo das linhas envolvidas. Além disso, o trigger não deve permitir que nenhuma pessoa seja removida.

--função de trigger que bloqueia remoção e apenas "desativa"
CREATE OR REPLACE FUNCTION fn_bloquear_delete_pessoa()
RETURNS TRIGGER
LANGUAGE plpgsql
AS $$
BEGIN
    -- marca o registro como inativo, mas NÃO apaga da tabela
    UPDATE tb_pessoa SET ativo = FALSE WHERE cod_pessoa = OLD.cod_pessoa;
    RAISE NOTICE 'Remoção bloqueada, pessoa desativada'; -- mensagem para o usuário
    -- RETURN NULL impede o DELETE
    RETURN NULL;
END;
$$;

--1.1 Adicione uma coluna à tabela tb_pessoa chamada ativo. Ela indica se a pessoa está ativa no sistema ou não. Ela deve ser capaz de armazenar um valor booleano. Por padrão, toda pessoa cadastrada no sistema está ativa. Se necessário, consulte o Link 1.1.1.
ALTER TABLE tb_pessoa ADD COLUMN ativo BOOLEAN DEFAULT TRUE;
